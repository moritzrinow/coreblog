@page "/{Slug}"

@using CoreBlog.Server.Resources
@using CoreBlog.Server.Services
@using CoreBlog.Shared.Models
@using CoreBlog.Shared.Storage
@using Microsoft.Extensions.Localization

@inject IBlog blog
@inject IPostContentService postContentService
@inject IBlogStorage storage
@inject IStringLocalizer<SharedResource> localizer

@if (PostMetadata is null)
{
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center">
        <RadzenText>
            @localizer["PostNotFound"]
        </RadzenText>
    </RadzenStack>
}
else
{
    <PageTitle>@PostMetadata.Title</PageTitle>

    <HeadContent>
        <meta name="og:title" content="@PostMetadata.Title"/>
        <meta name="og:description" content="@PostMetadata.Summary"/>
        <meta name="description" content="@PostMetadata.Summary"/>
        @if (PostMetadata.Thumbnail is { } thumbnail && storage.GetAssetUrl(thumbnail) is { } thumbnailUrl)
        {
            <meta name="og:image" content="@thumbnailUrl"/>
        }
    </HeadContent>

    <article lang="@PostMetadata.Language">
        <RadzenHeading Text="@PostMetadata.Title"/>
        <RadzenStack Gap="1rem">
            @if (PostMetadata.Date is { } date)
            {
                <RadzenText TextStyle="TextStyle.Caption">
                    @date.Date.ToShortDateString()
                </RadzenText>
            }
            @if (PostMetadata.Thumbnail is { } thumbnail && storage.GetAssetUrl(thumbnail) is { } thumbnailUrl)
            {
                <RadzenImage
                    Path="@thumbnailUrl"/>
            }
        </RadzenStack>
        @PostContent
    </article>
}

@code {

    PostMetadata? PostMetadata { get; set; }

    MarkupString? PostContent { get; set; }

    [Parameter] public string Slug { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        PostMetadata = blog.Posts.FirstOrDefault(e => e.Id == Slug && e.Published);

        if (PostMetadata is not null)
        {
            PostContent = await postContentService.GetPostContentAsync(Slug);
        }
    }

}
